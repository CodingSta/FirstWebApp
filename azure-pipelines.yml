
trigger:
- master

variables:
    azureSubscription: 'Visual Studio Enterprise 2'
    webAppName: 'minwa2021'
    environmentName: 'minwa2021'
    rgName: 'TestRG02'
    vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Azure Web App Build Job'
    
    pool:
      vmImage: $(vmImageName)

    steps:

    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '12.x'
      
    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  condition: succeeded()
  
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureWebApp@1
              displayName: 'Azure Web App Deploy: $(webAppName)'
              inputs:
                azureSubscription: $(azureSubscription)
                appType: webAppLinux
                appName: $(webAppName)
                runtimeStack: 'NODE|12.9'
                package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                startUpCommand: 'npm run start'



      # steps:
      # - task: AzureRmWebAppDeployment@4
      #   inputs:
      #     VirtualApplication: ''
      #     - script: echo MinGyu_Deploy_Script
      #     - bash: |
      #         echo MinGyu_Deploy_Bash

    # - task: AzureWebApp@1
    #   displayName: 'Azure Web App Build Task'
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     appType: webAppLinux
    #     appName: $(appName)
    #     package: $(System.ArtifactsDirectory)/**/*.zip
    #     #package: '$(System.DefaultWorkingDirectory)'
    #     #customWebConfig: '-Handler iisnode -NodeStartFile server.js -appType node'

    # - task: AzureAppServiceManage@0
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     appType: webAppLinux
    #     WebAppName: $(appName)
    #     ResourceGroupName: $(rgName)
    #     SourceSlot: staging
    #     SwapWithProduction: true
    # - bash: |
    #     echo MinGyu_Build_Echo1
    #     echo MinGyu_Build_Echo2
